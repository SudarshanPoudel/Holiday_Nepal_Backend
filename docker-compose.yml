services:
  db:
    image: postgis/postgis:15-3.3
    platform: linux/amd64
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: holidaynepal
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  redis:
    image: redis:7
    platform: linux/amd64
    container_name: holidaynepal-redis
    ports:
      - "6379:6379"

  neo4j:
    build:
      context: .
      dockerfile: docker/Dockerfile.neo4j
      platforms:
        - linux/amd64
    container_name: holidaynepal-neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_dbms_default__listen__address=0.0.0.0
      - NEO4J_dbms_connector_bolt_listen__address=:7687
      - NEO4J_dbms_connector_http_listen__address=:7474
      - NEO4J_dbms_security_procedures_unrestricted=gds.*,apoc.*
      - NEO4J_dbms_security_procedures_allowlist=gds.*,apoc.*
      - NEO4J_PLUGINS=["graph-data-science","apoc"]
    volumes:
      - neo4j_data:/data

  localstack:
    image: localstack/localstack:latest
    platform: linux/amd64
    container_name: localstack
    ports:
      - "4566:4566"
      - "8080:8080"
    environment:
      - SERVICES=s3
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - LOCALSTACK_VOLUME_DIR=/var/lib/localstack
      - DEBUG=1
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - ./localstack-data:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock

  celery:
    build:
      context: .
      dockerfile: docker/Dockerfile.web
      platforms:
        - linux/amd64
    container_name: holidaynepal-celery
    command: >
      sh -c "
        sleep 20 &&
        celery -A app.core.celery_tasks.c_app worker --loglevel=info
      "
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - PYTHONUNBUFFERED=1

  web:
    build:
      context: .
      dockerfile: docker/Dockerfile.web
      platforms:
        - linux/amd64
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - DOCKERIZED=1
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - celery
      - neo4j
      - localstack
    command: >
      sh -c "
        sleep 30 &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

volumes:
  postgres_data:
  neo4j_data: