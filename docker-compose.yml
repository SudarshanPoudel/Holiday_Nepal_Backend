services:
  db:
    image: postgis/postgis:15-3.3
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: holidaynepal
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d holidaynepal"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
  redis:
    image: redis:7
    container_name: holidaynepal-redis
    ports:
      - "6379:6379"
  neo4j:
    image: neo4j:5.10
    container_name: holidaynepal-neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_dbms_default__listen__address=0.0.0.0
      - NEO4J_dbms_connector_bolt_listen__address=:7687
      - NEO4J_dbms_connector_http_listen__address=:7474
      - NEO4J_PLUGINS=["graph-data-science"]
      - NEO4J_dbms_security_procedures_unrestricted=gds.*
      - NEO4J_dbms_security_procedures_allowlist=gds.*
    volumes:
      - neo4j_data:/data
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
  localstack:
    image: localstack/localstack
    container_name: localstack
    ports:
      - "4566:4566"
      - "8080:8080"
    environment:
      - SERVICES=s3
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - LOCALSTACK_VOLUME_DIR=/var/lib/localstack
    volumes:
      - ./localstack-data:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
      - ./scripts/init_localstack.sh:/etc/localstack/init/ready.d/init_localstack.sh
  web:
    build: .
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - DOCKERIZED=1
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      celery:
        condition: service_started
      neo4j:
        condition: service_healthy
      localstack:
        condition: service_healthy 
    command: >
      sh -c "
        alembic upgrade head &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "
  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: holidaynepal-celery
    command: >
      sh -c "celery -A app.core.celery_tasks.c_app worker --loglevel=info"
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - PYTHONUNBUFFERED=1

  seeder:
    build: .
    depends_on:
      db:
        condition: service_healthy
      web:
        condition: service_started
      neo4j:
        condition: service_healthy
      localstack:
        condition: service_healthy 
    command: >
      sh -c "
        python -m app.database.seeder.run_seeder
      "
    volumes:
      - .:/app
    environment:
      - DOCKERIZED=1
    env_file:
      - .env

volumes:
  postgres_data:
  neo4j_data: